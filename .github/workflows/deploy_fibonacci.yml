name: Deploy Python Script

on:
  push:
    branches:
      - release-production
      - MOBL-39-test-deployment
  pull_request:
    branches:
      - release-production
      - MOBL-39-test-deployment

jobs:
  deploy-staging:
    if: github.ref != 'refs/heads/release-production'
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      deployments: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12'
          
      - name: Create Deployment
        uses: chrnorm/deployment-action@v2.0.7
        id: deployment
        with:
          environment: "staging"
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run Python Script
        run: |
          python fibonacci.py

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

  deploy-production:
    if: github.ref == 'refs/heads/release-production'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ github.server_url }}/${{ github.repository }}/deployments
    permissions:
      deployments: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12'
          
      - name: Create Deployment
        uses: chrnorm/deployment-action@v2.0.7
        id: deployment
        with:
          environment: "production"
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run Python Script
        run: |
          python fibonacci.py

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}